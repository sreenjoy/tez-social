name: Monitor Vercel Deployment

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  # Allow manual triggering
  workflow_dispatch:


# Add permissions needed for GitHub token
permissions:
  actions: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Check Vercel deployment
        id: check_site
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "Checking deployment status..."
          
          # Get project details
          PROJECT_DATA=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
                      "https://api.vercel.com/v9/projects/$VERCEL_PROJECT_ID?teamId=$VERCEL_ORG_ID")
          
          # Extract production URL
          PROD_URL=$(echo "$PROJECT_DATA" | jq -r '.alias[0]')
          
          if [ -z "$PROD_URL" ] || [ "$PROD_URL" = "null" ]; then
            echo "No production URL found. Using default domain..."
            PROD_URL=$(echo "$PROJECT_DATA" | jq -r '.targets.production.url')
          fi
          
          echo "Production URL: $PROD_URL"
          
          # Check if site is accessible
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://$PROD_URL")
          
          echo "HTTP Status Code: $HTTP_CODE"
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Site is accessible (HTTP 200)"
            echo "::set-output name=status::ok"
          else
            echo "⚠️ Site returned HTTP $HTTP_CODE"
            echo "::set-output name=status::error"
            echo "::set-output name=http_code::$HTTP_CODE"
          fi
          
      - name: Get deployment logs on error
        if: steps.check_site.outputs.status == 'error'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          echo "Getting latest deployment logs..."
          
          # Get latest deployment
          LATEST_DEPLOYMENT=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
                           "https://api.vercel.com/v6/deployments?teamId=$VERCEL_ORG_ID&limit=1")
          
          DEPLOYMENT_ID=$(echo "$LATEST_DEPLOYMENT" | jq -r '.deployments[0].uid')
          DEPLOYMENT_STATE=$(echo "$LATEST_DEPLOYMENT" | jq -r '.deployments[0].state')
          
          echo "Latest deployment ID: $DEPLOYMENT_ID"
          echo "Deployment state: $DEPLOYMENT_STATE"
          
          if [ "$DEPLOYMENT_STATE" != "READY" ]; then
            echo "Latest deployment is not in READY state"
            
            # Get deployment logs
            LOGS=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
                 "https://api.vercel.com/v6/deployments/$DEPLOYMENT_ID/events")
            
            echo "Deployment logs:"
            echo "$LOGS" | jq '.events[] | select(.type == "stderr" or .type == "error") | .payload'
          fi
      
      - name: Create issue content file
        if: steps.check_site.outputs.status == 'error'
        run: |
          cat > issue.md << EOF
          ## Deployment Issue Detected
          
          The deployment monitoring system detected an issue with the Vercel deployment.
          
          - HTTP Status Code: ${{ steps.check_site.outputs.http_code }}
          - Timestamp: $(date -u)
          
          ### Possible Solutions:
          
          1. Check the deployment logs in Vercel dashboard
          2. Verify that all environment variables are correctly set
          3. Run the auto-fix workflow manually
          
          ### Automatic Actions:
          
          The system will try to fix this issue automatically by triggering the auto-fix workflow.
          EOF
      
      - name: Create GitHub issue for failed deployment
        if: steps.check_site.outputs.status == 'error'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: 'Vercel Deployment Issue Detected'
          content-filepath: ./issue.md
          labels: deployment, bug, priority
      
      - name: Trigger auto-fix if site is down
        if: steps.check_site.outputs.status == 'error'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: auto-fix.yml
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: '{"deployment_id": "", "deployment_url": ""}' 